// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace BookSmart.Models
{
    public partial class BookSmartDBContext : DbContext
    {
        private readonly IConfiguration _configuration;
        public BookSmartDBContext(IConfiguration configuration)
        {
            _configuration = configuration;
        }

        public BookSmartDBContext(DbContextOptions<BookSmartDBContext> options, IConfiguration configuration)
            : base(options)
        {
            _configuration = configuration;
        }

        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<BookClass> BookClasses { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<ClassTeacher> ClassTeachers { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<SubjectTeacher> SubjectTeachers { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                var username = _configuration.GetValue<string>("DBLogin");
                var password = _configuration.GetValue<string>("Password");
                optionsBuilder.UseSqlServer($"Server=tcp:booksmartdbserver.database.windows.net,1433;Initial Catalog=BookSmartDB;Persist Security Info=False;User ID={username};Password={password};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Book>(entity =>
            {
                entity.HasOne(d => d.Subject)
                    .WithMany(p => p.Books)
                    .HasForeignKey(d => d.SubjectId)
                    .HasConstraintName("FK__Book__Subject_id__00200768");
            });

            modelBuilder.Entity<BookClass>(entity =>
            {
                entity.HasKey(e => e.BcId)
                    .HasName("PK__Book-Cla__29E996161354D952");

                entity.Property(e => e.BcId).ValueGeneratedNever();

                entity.HasOne(d => d.Book)
                    .WithMany(p => p.BookClasses)
                    .HasForeignKey(d => d.BookId)
                    .HasConstraintName("FK__Book-Clas__Book___778AC167");

                entity.HasOne(d => d.NameNavigation)
                    .WithMany(p => p.BookClasses)
                    .HasForeignKey(d => d.Name)
                    .HasConstraintName("FK__Book-Class__Name__76969D2E");
            });

            modelBuilder.Entity<Class>(entity =>
            {
                entity.HasKey(e => e.Name)
                    .HasName("PK__Class__737584F7FF7D021B");
            });

            modelBuilder.Entity<ClassTeacher>(entity =>
            {
                entity.HasKey(e => e.CtId)
                    .HasName("PK__Class-Te__DC4E3A73CFC41E96");

                entity.Property(e => e.CtId).ValueGeneratedNever();

                entity.HasOne(d => d.InitialsNavigation)
                    .WithMany(p => p.ClassTeachers)
                    .HasForeignKey(d => d.Initials)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Class-Tea__Initi__02084FDA");

                entity.HasOne(d => d.NameNavigation)
                    .WithMany(p => p.ClassTeachers)
                    .HasForeignKey(d => d.Name)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Class-Teac__Name__02FC7413");
            });

            modelBuilder.Entity<SubjectTeacher>(entity =>
            {
                entity.HasKey(e => e.StId)
                    .HasName("PK__Subject-__EBD417B72FCF8FAD");

                entity.Property(e => e.StId).ValueGeneratedNever();

                entity.HasOne(d => d.InitialsNavigation)
                    .WithMany(p => p.SubjectTeachers)
                    .HasForeignKey(d => d.Initials)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Subject-T__Initi__04E4BC85");

                entity.HasOne(d => d.Subject)
                    .WithMany(p => p.SubjectTeachers)
                    .HasForeignKey(d => d.SubjectId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Subject-T__Subje__03F0984C");
            });

            modelBuilder.Entity<Teacher>(entity =>
            {
                entity.HasKey(e => e.Initials)
                    .HasName("PK__Teacher__F6EBAFF723CDF5FE");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}